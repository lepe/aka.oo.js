/**
 Chic is an extremely simple class-like interface to JavaScript prototypal inheritance.
 https://github.com/rowanmanning/chic
*/
(function(b,e){function a(j,k,g){var h,i;for(h in j){if(j.hasOwnProperty(h)){i=j[h];k.call(g||i,i,h,j)}}}function d(g){return(typeof g==="function")}function f(h,g){return function(){var j,i;j=this.sup;this.sup=g;i=h.apply(this,arguments);this.sup=j;if(typeof this.sup==="undefined"){delete this.sup}return i}}function c(){}c.extend=function(j){var i=this;var h="*extending*";var k;i[h]=true;k=new i();delete i[h];a(j,function(m,l){if(d(m)){k[l]=f(m,i.prototype[l]);return}k[l]=m});function g(){if(!g[h]&&d(k.init)){k.init.apply(this,arguments)}}g.prototype=k;g.prototype.constructor=g;g.extend=i.extend;return g};e.Class=c;if(typeof define!=="undefined"&&define.amd){define([],function(){return e})}else{if(typeof module!=="undefined"&&module.exports){module.exports=e}else{b.chic=e}}}(this,{}));
